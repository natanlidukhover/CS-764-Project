>>>>> main Main.cpp 427
-------------------------------Input--------------------------
Total number of records: 12000000
Size of one record: 1000
Trace file name: 12GB_Trace.txt
Total data to be sorted in bytes: 12000000000

----------------------Random number generator-----------------
Random data will be written to the file ./input/testData.bin
>>>>> run Scan.cpp 115
12000000000 bytes of random data generated and stored in HDD
<<<<< run Scan.cpp 115

----------------------Starting sort------------
Case 3: Data less than DRAM + SSD + HDD size. Using DRAM, SSD and HDD to sort.
>>>>> sortHddAndStore Main.cpp 268
Generating 1 run each of size 9900000000 or 2003000000 using DRAM and SSD and storing it in HDD
>>>>> sortSsdAndStore Main.cpp 157
Generating 20 run each of size 99000000 or 23000000 using DRAM and storing it in SSD
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 23000000 bytes from HDD to DRAM and using quicksort to generate 46 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 46 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 23000 records and 23000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
Generating 198 runs each of size 500000 and storing it in DRAM
All runs needed for merging using DRAM and SSD generated
20 buffers allocated for runs in SSD and 198 buffers allocated for runs in DRAM
Using tree of losers to merge 218 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 2003000 records and 2003000000 bytes to output device HDD
<<<<< sortSsdAndStore Main.cpp 157
Generating 100 run using DRAM and storing it in SSD
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
>>>>> sortDramAndStore Main.cpp 66
Read 99000000 bytes from HDD to DRAM and using quicksort to generate 198 runs each of size 500000
All runs needed for merging using DRAM generated
Using tree of losers to merge 198 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 99000 records and 99000000 bytes to output device SSD
<<<<< sortDramAndStore Main.cpp 66
Read 97000000 from HDD to DRAM and using quicksort to generate 194 runs each of size 500000
All runs needed for final merging generated
100 buffers allocated for runs in SSD
1 buffers allocated for runs in HDD
Using tree of losers to merge 295 runs
>>>>> TOL tol.cpp 508
<<<<< TOL tol.cpp 508
TOL outputted 12000000 records and 12000000000 bytes to output device HDD
<<<<< sortHddAndStore Main.cpp 268
Sorting of 12000000 records, each of size 1000 bytes completed successfully!!!

----------------------Statistics about sorting------------
HDD block size is: 1000000
Number of blocks written to HDD: 14003
Number of blocks read from HDD: 14003
Total HDD access latency: 280060 ms

SSD block size is: 10000
Number of blocks written to SSD: 1180400
Number of blocks read from SSD: 1180400
Total SSD access latency: 236080 ms
<<<<< main Main.cpp 427
